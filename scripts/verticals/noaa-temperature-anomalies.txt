{
  "id": 9695416,
  "steps": [
    {
      "id": 906,
      "name": "importcsv",
      "label": "CSV",
      "params": {
        "file": {
          "id": 1,
          "static": true,
          "value": [
            {
              "control": "fileload",
              "links": [
                {
                  "name": "url",
                  "label": "Insert link"
                },
                {
                  "name": "file",
                  "label": "Load file"
                }
              ],
              "selected": "url",
              "fileExt": ".csv",
              "value": "https://www.ncdc.noaa.gov/cag/global/time-series/globe/land_ocean/ytd/12/1880-2019/data.csv",
              "id": 0
            }
          ],
          "name": "file",
          "label": "File"
        },
        "separator": {
          "id": 3,
          "static": true,
          "value": [
            {
              "control": "textbox",
              "value": ",",
              "id": 2
            }
          ],
          "name": "separator",
          "label": "Separator"
        },
        "skip": {
          "id": 5,
          "static": true,
          "value": [
            {
              "control": "textbox",
              "value": "",
              "id": 4
            }
          ],
          "name": "skip",
          "label": "Skip"
        }
      },
      "error": "",
      "metadata": {
        "input": [],
        "params": [
          {
            "name": "file",
            "label": "File",
            "value": [
              {
                "control": "fileload",
                "links": [
                  {
                    "name": "url",
                    "label": "Insert link"
                  },
                  {
                    "name": "file",
                    "label": "Load file"
                  }
                ],
                "selected": "url",
                "fileExt": ".csv",
                "value": "https://raw.githubusercontent.com/javierluraschi/datasets/datasets/aapl/data.csv",
                "id": 0
              }
            ]
          },
          {
            "name": "separator",
            "label": "Separator",
            "value": [
              {
                "control": "textbox",
                "value": ",",
                "id": 1
              }
            ]
          },
          {
            "name": "skip",
            "label": "Skip",
            "value": [
              {
                "control": "textbox",
                "value": "",
                "id": 2
              }
            ]
          }
        ],
        "deps": [
          "https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.min.js"
        ],
        "cache": true,
        "environment": null,
        "invalid": null,
        "output": [
          "data"
        ]
      },
      "script": "/**\n  input: []\n  params:\n    - name: file\n      label: 'File'\n      value:\n        - control: 'fileload'\n          links:\n            - name: 'url'\n              label: 'Insert link'\n            - name: 'file'\n              label: 'Load file'\n          selected: 'url'\n          fileExt: '.csv'\n          value: 'https://raw.githubusercontent.com/javierluraschi/datasets/datasets/aapl/data.csv'\n    - name: separator\n      label: 'Separator'\n      value:\n        - control: 'textbox'\n          value: ','\n    - name: skip\n      label: 'Skip'\n      value:\n        - control: 'textbox'\n          value: ''\n  deps: [ 'https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.min.js' ]\n  cache: true\n**/\n\nfile = file ? file : '';\nvar type = /^hal9:|^data:/.test(file) ? 'file' : 'url';\n\nconst dsvParser = d3.dsvFormat(separator || ',');\n\nlet csv = '';\n\nif (type === 'url' && file != '') {\n  const res = await fetch(file);\n  csv = await res.text();\n} else {\n  file = atob(file.replace(/^.*;base64,/, ''));\n  csv = file;\n}\n\nif (csv) {\n  if (skip) {\n    var withsplit = csv.split('\\n');\n    withsplit.splice(0, skip);\n    csv = withsplit.join('\\n');\n  }\n  data = dsvParser.parse(csv);\n  data = data.filter(d => typeof(d) !== 'undefined')\n} else {\n  data = '';\n}\n"
    },
    {
      "id": 907,
      "name": "filter",
      "label": "Filter",
      "params": {
        "field": {
          "id": 0,
          "name": "field",
          "label": "field",
          "static": false,
          "value": [
            {
              "id": 15,
              "name": "Global Land and Ocean Temperature Anomalies",
              "label": "Global Land and Ocean Temperature Anomalies"
            }
          ]
        },
        "expression": {
          "id": 2,
          "static": true,
          "value": [
            {
              "control": "textbox",
              "value": "!isNaN(field)",
              "id": 1
            }
          ],
          "name": "expression",
          "label": "Expression"
        }
      },
      "error": "",
      "metadata": {
        "params": [
          {
            "name": "field",
            "label": "field"
          },
          {
            "name": "expression",
            "label": "Expression",
            "value": [
              {
                "control": "textbox",
                "value": "field != null",
                "id": 0
              }
            ]
          }
        ],
        "input": [
          "data"
        ],
        "deps": [],
        "environment": null,
        "cache": false,
        "invalid": null,
        "output": [
          "data"
        ]
      },
      "script": "/**\n  params:\n    - field\n    - name: expression\n      label: 'Expression'\n      value:\n        - control: 'textbox'\n          value: field != null\n**/\n\nif (expression) {\n  var filterexp = new Function('field', 'return ' + expression);\n  data = data.filter(row => filterexp(row[field]));\n}\n"
    },
    {
      "id": 905,
      "name": "convert",
      "label": "Convert",
      "params": {
        "field": {
          "id": 0,
          "name": "field",
          "label": "field",
          "static": false,
          "value": [
            {
              "id": 13,
              "name": " January-December",
              "label": " January-December"
            }
          ]
        },
        "expression": {
          "id": 2,
          "static": true,
          "value": [
            {
              "control": "textbox",
              "value": "parseFloat(field)",
              "id": 1
            }
          ],
          "name": "expression",
          "label": "Expression"
        }
      },
      "error": "",
      "metadata": {
        "params": [
          {
            "name": "field",
            "label": "field"
          },
          {
            "name": "expression",
            "label": "Expression",
            "value": [
              {
                "control": "textbox",
                "value": "new Date(field)",
                "id": 0
              }
            ]
          }
        ],
        "input": [
          "data"
        ],
        "deps": [],
        "environment": null,
        "cache": false,
        "invalid": null,
        "output": [
          "data"
        ]
      },
      "script": "/**\n  params:\n    - field\n    - name: expression\n      label: 'Expression'\n      value:\n        - control: 'textbox'\n          value: new Date(field)\n**/\n\nif (expression) {\n  var mapexpr = new Function('field', 'return ' + expression);\n  data = data.map(row => {\n    row[field] = mapexpr(row[field])\n    return row;\n  });\n}\n\n"
    },
    {
      "id": 904,
      "name": "scatterchart",
      "label": "Scatter",
      "params": {
        "x": {
          "id": 0,
          "name": "x",
          "label": "x",
          "static": false,
          "value": [
            {
              "id": 11,
              "name": "Global Land and Ocean Temperature Anomalies",
              "label": "Global Land and Ocean Temperature Anomalies"
            }
          ]
        },
        "y": {
          "id": 1,
          "name": "y",
          "label": "y",
          "static": false,
          "value": [
            {
              "id": 12,
              "name": " January-December",
              "label": " January-December"
            }
          ]
        },
        "color": {
          "id": 2,
          "name": "color",
          "label": "color",
          "static": false,
          "value": []
        },
        "size": {
          "id": 3,
          "name": "size",
          "label": "size",
          "static": false,
          "value": []
        }
      },
      "error": "",
      "metadata": {
        "output": [
          "html"
        ],
        "params": [
          {
            "name": "x",
            "label": "x"
          },
          {
            "name": "y",
            "label": "y"
          },
          {
            "name": "color",
            "label": "color"
          },
          {
            "name": "size",
            "label": "size"
          }
        ],
        "deps": [
          "chart-utils.js",
          "https://cdn.jsdelivr.net/npm/d3@6",
          "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1"
        ],
        "input": [
          "data"
        ],
        "environment": null,
        "cache": false,
        "invalid": null
      },
      "script": "/**\n  output: [html]\n  params: [x, y, color, size]\n  deps: [\n    'chart-utils.js',\n    'https://cdn.jsdelivr.net/npm/d3@6',\n    'https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1',\n  ]\n**/\n\ndebugger\nconst chartdata = x && y\n ? data.map(v => ({\n     x: convert(v[x]),\n     y: convert(v[y]),\n     color: convert(v[color]),\n     size: convert(v[size]),\n   }))\n : [];\n\nconst chart = Plot.dot(\n  chartdata, {\n    x: x ? \"x\" : [],\n    y: y ? \"y\" : [],\n    r: size ? \"size\" : 5,\n    fill: color ? \"color\" : d3.schemeTableau10[0],\n  }\n);\n\nhtml.appendChild(Plot.plot({\n  marks: [chart],\n  x: { grid: true },\n  y: {\n    grid: true,\n    tickFormat: (d) => (d > 1000 ? d3.format('~s')(d) : d),\n  },\n  width: html.clientWidth,\n  height: html.clientHeight,\n  style: {\n    background: hal9.isDark() ? \"#222\" : '',\n    color: hal9.isDark() ? \"white\" : ''\n  },\n}));\n"
    },
    {
      "id": 908,
      "name": "regressionpredict",
      "label": "Regression",
      "params": {
        "x": {
          "id": 0,
          "static": false,
          "value": [
            {
              "id": 13,
              "name": "Global Land and Ocean Temperature Anomalies",
              "label": "Global Land and Ocean Temperature Anomalies"
            }
          ],
          "name": "x",
          "label": "Y"
        },
        "y": {
          "id": 1,
          "static": false,
          "value": [
            {
              "id": 14,
              "name": " January-December",
              "label": " January-December"
            }
          ],
          "name": "y",
          "label": "Y"
        },
        "type": {
          "id": 3,
          "static": true,
          "value": [
            {
              "control": "select",
              "value": "exponential",
              "values": [
                {
                  "name": "linear",
                  "label": "Linear"
                },
                {
                  "name": "exponential",
                  "label": "Exponential"
                },
                {
                  "name": "logarithmic",
                  "label": "Logarithmic"
                },
                {
                  "name": "power",
                  "label": "Power"
                },
                {
                  "name": "polynomial",
                  "label": "Polynomial"
                }
              ],
              "id": 2
            }
          ],
          "name": "type",
          "label": "Type"
        },
        "predictions": {
          "id": 5,
          "static": true,
          "value": [
            {
              "control": "range",
              "value": "29",
              "min": 0,
              "max": 100,
              "id": 4
            }
          ],
          "name": "predictions",
          "label": "Predictions"
        }
      },
      "error": "",
      "metadata": {
        "params": [
          {
            "name": "x",
            "label": "Y"
          },
          {
            "name": "y",
            "label": "Y"
          },
          {
            "name": "type",
            "label": "Type",
            "value": [
              {
                "control": "select",
                "value": "linear",
                "values": [
                  {
                    "name": "linear",
                    "label": "Linear"
                  },
                  {
                    "name": "exponential",
                    "label": "Exponential"
                  },
                  {
                    "name": "logarithmic",
                    "label": "Logarithmic"
                  },
                  {
                    "name": "power",
                    "label": "Power"
                  },
                  {
                    "name": "polynomial",
                    "label": "Polynomial"
                  }
                ],
                "id": 0
              }
            ]
          },
          {
            "name": "predictions",
            "label": "Predictions",
            "value": [
              {
                "control": "range",
                "value": 0,
                "min": 0,
                "max": 100,
                "id": 1
              }
            ]
          }
        ],
        "output": [
          "data",
          "html"
        ],
        "deps": [
          "chart-utils.js",
          "https://cdn.jsdelivr.net/npm/d3@6",
          "https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1"
        ],
        "input": [
          "data"
        ],
        "environment": null,
        "cache": false,
        "invalid": null
      },
      "script": "/**\n  params:\n    - name: x\n      label: Y\n    - name: y\n      label: Y\n    - name: type\n      label: Type\n      value:\n        - control: select\n          value: linear\n          values:\n            - name: linear\n              label: Linear    \n            - name: exponential\n              label: Exponential\n            - name: logarithmic\n              label: Logarithmic\n            - name: power\n              label: Power\n            - name: polynomial\n              label: Polynomial\n    - name: predictions\n      label: Predictions\n      value:\n        - control: range\n          value: 0\n          min: 0\n          max: 100\n  output:\n    - data\n    - html\n  deps:\n    - 'chart-utils.js'\n    - 'https://cdn.jsdelivr.net/npm/d3@6'\n    - 'https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1'\n**/\n\ntf.setBackend('cpu');\n\nif (!x) {\n  var x = '_id';\n  data.map((e,i) => Object.assign(e, { '_id': i }))\n}\n\n// Train\n\nconst trainX = tf.tensor1d(data.map(e => convert(e[x])));\nconst trainY = tf.tensor1d(data.map(e => convert(e[y])));\n\nconst [maxX, minX] = [trainX.max(), trainX.min()];\nconst normX = trainX.sub(minX).div(maxX.sub(minX));\nconst [maxY, minY] = [trainY.max(), trainY.min()];\nconst normY = trainY.sub(minY).div(maxY.sub(minY));\n\nconst learningRate = 0.3;\nconst epochs = 100;\n\nvar regressions = {\n  linear: () => {\n    const m = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => m.mul(x).add(b);\n  },\n  exponential: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => b.mul(x).exp().mul(a);\n  },\n  logarithmic: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.log().mul(b).add(a);\n  },\n  power: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.pow(b).mul(a);\n  },\n  polynomial: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    const c = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.sqrt().mul(a).add(b.mul(x)).add(c);\n  }\n}\n\nconst predict = regressions[type]();\n\nconst loss = (pred, actual) => pred.sub(actual).square().mean();\nconst optimizer = tf.train.adam(learningRate);\n\nfor (let idx = 0; idx < epochs; idx++) {\n  tf.tidy(() => {\n    optimizer.minimize(function() { \n      const predsYs = predict(normX); \n      stepLoss = loss(predsYs, normY);   \n      return stepLoss; \n    }); \n  });\n}\n\n// Predict\n\nvar current = convert(data[data.length-1][x]);\nvar increment = data[data.length-1][x] - data[data.length-2][x];\nvar predTotal = Math.round(1.0 * data.length * predictions / 100);\nfor (var idx = 0; idx < predTotal; idx++) {\n  current += increment;\n  var futureRow = Object.fromEntries(Object.keys(data[data.length - 1]).map(e => [e, null]));\n  futureRow[x] = current;\n  data.push(futureRow);\n}\n\nvar predsX = tf.tensor1d(data.map(e => convert(e[x])));\nvar predsNormX = predsX.sub(minX).div(maxX.sub(minX));\nvar normPreds = predict(predsNormX);\nvar preds = normPreds.mul(maxY.sub(minY)).add(minY).dataSync();\n\ndata = data.map((e, i) => {\n  e['prediction(' + y + ')'] = preds[i];\n  return e;\n});\n\n// Chart\n\nif (y && !Array.isArray(y)) y = [y];\nif (!y) { y = [] } else { y.push('prediction(' + y + ')') };\n\nconst chartdata = x && y.length\n ? data.map(v => {\n     const value = { x: convert(v[x]) };\n     y.map((yv, i) => {\n       value[`y${i}`] = convert(v[yv]);\n     });\n     return value;\n   })\n : [];\n\nhtml.appendChild(Plot.plot({\n  marks: [\n    Plot.line(chartdata, {\n      x: x ? \"x\" : [],\n      y: `y1`,\n      stroke: d3.schemeTableau10[1],\n      strokeWidth: 3,\n      strokeDasharray: \"2,3\"\n    }),\n    Plot.line(chartdata, {\n      x: x ? \"x\" : [],\n      y: `y0`,\n      stroke: d3.schemeTableau10[0],\n      strokeWidth: 3,\n    })\n  ],\n  x: { grid: true },\n  y: {\n    grid: true,\n    tickFormat: (d) => (d > 1000 ? d3.format('~s')(d) : d),\n  },\n  width: html.clientWidth,\n  height: html.clientHeight,\n  style: {\n    background: hal9.isDark() ? \"#222\" : '',\n    color: hal9.isDark() ? \"white\" : ''\n  },\n}));\n"
    }
  ],
  "params": {
    "904": {
      "x": {
        "id": 0,
        "name": "x",
        "label": "x",
        "static": false,
        "value": [
          {
            "id": 11,
            "name": "Global Land and Ocean Temperature Anomalies",
            "label": "Global Land and Ocean Temperature Anomalies"
          }
        ]
      },
      "y": {
        "id": 1,
        "name": "y",
        "label": "y",
        "static": false,
        "value": [
          {
            "id": 12,
            "name": " January-December",
            "label": " January-December"
          }
        ]
      },
      "color": {
        "id": 2,
        "name": "color",
        "label": "color",
        "static": false,
        "value": []
      },
      "size": {
        "id": 3,
        "name": "size",
        "label": "size",
        "static": false,
        "value": []
      }
    },
    "905": {
      "field": {
        "id": 0,
        "name": "field",
        "label": "field",
        "static": false,
        "value": [
          {
            "id": 13,
            "name": " January-December",
            "label": " January-December"
          }
        ]
      },
      "expression": {
        "id": 2,
        "static": true,
        "value": [
          {
            "control": "textbox",
            "value": "parseFloat(field)",
            "id": 1
          }
        ],
        "name": "expression",
        "label": "Expression"
      }
    },
    "906": {
      "file": {
        "id": 1,
        "static": true,
        "value": [
          {
            "control": "fileload",
            "links": [
              {
                "name": "url",
                "label": "Insert link"
              },
              {
                "name": "file",
                "label": "Load file"
              }
            ],
            "selected": "url",
            "fileExt": ".csv",
            "value": "https://www.ncdc.noaa.gov/cag/global/time-series/globe/land_ocean/ytd/12/1880-2019/data.csv",
            "id": 0
          }
        ],
        "name": "file",
        "label": "File"
      },
      "separator": {
        "id": 3,
        "static": true,
        "value": [
          {
            "control": "textbox",
            "value": ",",
            "id": 2
          }
        ],
        "name": "separator",
        "label": "Separator"
      },
      "skip": {
        "id": 5,
        "static": true,
        "value": [
          {
            "control": "textbox",
            "value": "",
            "id": 4
          }
        ],
        "name": "skip",
        "label": "Skip"
      }
    },
    "907": {
      "field": {
        "id": 0,
        "name": "field",
        "label": "field",
        "static": false,
        "value": [
          {
            "id": 15,
            "name": "Global Land and Ocean Temperature Anomalies",
            "label": "Global Land and Ocean Temperature Anomalies"
          }
        ]
      },
      "expression": {
        "id": 2,
        "static": true,
        "value": [
          {
            "control": "textbox",
            "value": "!isNaN(field)",
            "id": 1
          }
        ],
        "name": "expression",
        "label": "Expression"
      }
    },
    "908": {
      "x": {
        "id": 0,
        "static": false,
        "value": [
          {
            "id": 13,
            "name": "Global Land and Ocean Temperature Anomalies",
            "label": "Global Land and Ocean Temperature Anomalies"
          }
        ],
        "name": "x",
        "label": "Y"
      },
      "y": {
        "id": 1,
        "static": false,
        "value": [
          {
            "id": 14,
            "name": " January-December",
            "label": " January-December"
          }
        ],
        "name": "y",
        "label": "Y"
      },
      "type": {
        "id": 3,
        "static": true,
        "value": [
          {
            "control": "select",
            "value": "exponential",
            "values": [
              {
                "name": "linear",
                "label": "Linear"
              },
              {
                "name": "exponential",
                "label": "Exponential"
              },
              {
                "name": "logarithmic",
                "label": "Logarithmic"
              },
              {
                "name": "power",
                "label": "Power"
              },
              {
                "name": "polynomial",
                "label": "Polynomial"
              }
            ],
            "id": 2
          }
        ],
        "name": "type",
        "label": "Type"
      },
      "predictions": {
        "id": 5,
        "static": true,
        "value": [
          {
            "control": "range",
            "value": "29",
            "min": 0,
            "max": 100,
            "id": 4
          }
        ],
        "name": "predictions",
        "label": "Predictions"
      }
    }
  },
  "outputs": {
    "905": [
      {
        "id": 0,
        "name": "Global Land and Ocean Temperature Anomalies",
        "label": "Global Land and Ocean Temperature Anomalies"
      },
      {
        "id": 1,
        "name": " January-December",
        "label": " January-December"
      }
    ],
    "906": [
      {
        "id": 0,
        "name": "Global Land and Ocean Temperature Anomalies",
        "label": "Global Land and Ocean Temperature Anomalies"
      },
      {
        "id": 1,
        "name": " January-December",
        "label": " January-December"
      }
    ],
    "907": [
      {
        "id": 0,
        "name": "Global Land and Ocean Temperature Anomalies",
        "label": "Global Land and Ocean Temperature Anomalies"
      },
      {
        "id": 1,
        "name": " January-December",
        "label": " January-December"
      }
    ],
    "908": [
      {
        "id": 0,
        "name": "Global Land and Ocean Temperature Anomalies",
        "label": "Global Land and Ocean Temperature Anomalies"
      },
      {
        "id": 1,
        "name": " January-December",
        "label": " January-December"
      },
      {
        "id": 2,
        "name": "prediction( January-December)",
        "label": "prediction( January-December)"
      }
    ]
  },
  "errors": {
    "904": "",
    "905": "",
    "906": "",
    "907": "",
    "908": ""
  },
  "scripts": {
    "903": "/**\n  input: []\n  params:\n    - name: url\n      label: 'URL'\n      value:\n        - control: 'textbox'\n          value: 'https://news.ycombinator.com/'\n          lazy: true\n    - name: text\n      label: 'Table Text'\n      value:\n        - control: 'textbox'\n          value: '1.'\n          lazy: true\n    - name: hasHeader\n      label: 'Has Header'\n      value:\n        - control: 'select'\n          value: 'yes'\n          values:\n            - name: 'yes'\n              label: Yes\n            - name: 'no'\n              label: No\n    - name: scrollIters\n      label: 'Scroll Iterations'\n      value:\n        - control: 'number'\n          value: 2\n          lazy: true\n  output:\n    - data\n    - screenshot\n    - log\n  environment: worker\n  deps: ['d3.v6.min.js']\n  cache: true\n**/\n\nconst browser = await puppeteer.launch({\n  headless: true,\n  args: [\n    '--no-sandbox',\n    '--disable-setuid-sandbox',\n    '--lang=en-US'\n  ]\n});\n\nconst page = await browser.newPage();\nconst width = 1440;\nconst height = 820;\n\nawait page.setRequestInterception(false);\nawait page.setDefaultNavigationTimeout(0);\nawait page.setUserAgent('Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.125 Safari/537.36');\nawait page.setViewport({\n  width: width,\n  height: height,\n  // reduce scale factor to reduce screenshot size\n  deviceScaleFactor: 0.5,\n});\n\nawait page.setExtraHTTPHeaders({ 'Accept-Language': 'en-US' });\nawait page.goto(url, {\n  waitUntil: 'networkidle2',\n  timeout: 10000 + scrollIters * 10\n});\n\nconst sleep = (ms) => new Promise(resolve => setTimeout(resolve, ms));\nwhile(scrollIters > 1) {\n  await page.evaluate(() => {\n    window.scrollTo(0, document.documentElement.scrollTop + document.body.offsetHeight/2);\n  }, );\n\n  scrollIters = scrollIters - 1;\n  await sleep(100);\n}\n\nvar [ table, log, error ]  = await page.evaluate((text, hasHeader) => {\n  var log = [];\n\n  try {\n    var element = [...document.querySelectorAll('*')].find(el => el.innerText && el.innerText.trim() === text.trim());\n\n    if (!element) {\n      log.push('Could not find table with exact text in given row');\n      element = [...document.querySelectorAll('*')].find(el => el.children.length == 0 && el.innerText && el.innerText.includes(text.trim()));\n\n      if (!element) {\n        log.push('Could not find table with exact text in given leaf node');\n        element = [...document.querySelectorAll('*')].filter(el => el.innerText && el.innerText.includes(text.trim()));\n        \n        if (element.length == 0) {\n          log.push('Could not find table with the given text');\n          return [ '', log ];\n        }\n\n        element = element[element.length - 1];\n      }\n    };\n\n    if (element.tagName === 'TD' || element.tagName === 'TH') {\n      log.push('There is an actual table in html code');\n\n      const table = element.closest('table');\n      if (!table) {\n        log.push('Could not find closest table');\n        return [ '', log ];\n      }\n\n      var [header, ...rows] = [...table.querySelectorAll('tr')];\n      if (!hasHeader) {\n        rows = [...table.querySelectorAll('tr')];\n\n        if (rows.length > 0) {\n          log.push('Header has ' + rows[0].querySelectorAll('td, th').length + ' columns');\n        }\n      }\n\n      const colsMax = Math.max(...rows.map(row => row.querySelectorAll('td, th').length));\n      const colsIndexes = Array.from(Array(colsMax).keys());\n\n      const tableRows = rows\n        .map(row => [...row.querySelectorAll('td, th')].map(el => {\n          const img = el.querySelector('img');\n          return img ? img.src : el.innerText.replace(/\\n/g, ' ');\n        }))\n        .filter(r => r.length > 0)\n      \n      log.push('Found ' + tableRows.length + ' rows in table');\n\n      var textHeader = [...header.querySelectorAll('td, th')]\n        .map(el => el.innerText.replace(/\\n/g, ' '))\n        .join('§');\n      if (!hasHeader && tableRows.length > 0) {\n        textHeader = colsIndexes.map((i) => 'column' + (i+1)).join('§');\n      }\n\n      return [ textHeader + '\\n' + tableRows.map(e => e.join('§')).join('\\n'), log ];\n    } else {\n      log.push('Text is not inside a td element so we want to guess the table structure for ' + element.nodeName);\n\n      const textClassName = element.classList[0];\n\n      if (!textClassName) {\n        log.push('Tables without classes are unsupported');\n        return [ '', log ];\n      }\n\n      log.push('Using class ' + textClassName + ' to extract data');\n\n      // Get all desired elements and their parents structure\n      const allElements = [...document.querySelectorAll(`${element.tagName}.${textClassName}`)];\n      const headless = allElements.length === 1 || allElements[0].className === allElements[1].className;\n      let fullStructure = allElements.map(el => {\n        const nodes = [];\n        while(el.parentNode) {\n          nodes.unshift(el.parentNode);\n          el = el.parentNode;\n        }\n        return nodes;\n      });\n\n      // If structure is of different length then filter by most common one\n      const structureLength = fullStructure.reduce((res, { length }) => {\n        if (res[length]) res[length] += 1;\n        else res[length] = 1;\n        return res;\n      }, {});\n      const sortedStructureLength = Object.keys(structureLength)\n        .sort((a, b) => structureLength[b] - structureLength[a]);\n\n      fullStructure = fullStructure.filter(el => el.length === parseInt(sortedStructureLength[0]));\n\n      // Get all direct desired children\n      const sliceIndex = fullStructure[0].reduce((res, _, i) => {\n        const array = fullStructure.map(el => el[i]);\n        const hasEquals = array.some((val, j) => array.indexOf(val) !== j);\n\n        if (hasEquals) res = i;\n        return res;\n      }, 0);\n      const structure = fullStructure.map(sel => sel[sliceIndex + 1]);\n\n      // Go from top to bottom to get full structure on end nodes\n      const getChildren = (res, node) => {\n        if (node.children.length) {\n          [...node.children].forEach(child => getChildren(res, child));\n          return res;\n        } else {\n          if (node.className) {\n            res.push({\n              tag: node.tagName,\n              class: node.className,\n              value: node.tagName === 'IMG' ? node.src : node.parentNode.innerText,\n            });\n          }\n          return res;\n        }\n      };\n\n      const resultStructure = structure.map(sel => {\n        return getChildren([], sel).filter((value, index, self) =>\n          value.class && self.findIndex(v => v.value === value.value) === index);\n      });\n\n      // Map the structure to rows and columns of the result table\n      const uniqueStructure = resultStructure.reduce((res, rel) => {\n        rel.forEach(el => {\n          const prop = `${el.tag}-${el.class}`;\n          if (!res[prop]) {\n            res[prop] = new Array(resultStructure.length);\n            res[prop].fill('');\n          }\n        });\n        return res;\n      }, {});\n\n      // Fill the result structure\n      resultStructure.forEach((rel, i) => {\n        rel.forEach(el => {\n          const prop = `${el.tag}-${el.class}`;\n          if (!uniqueStructure[prop][i]) uniqueStructure[prop][i] = el.value;\n        });\n      });\n\n      let csv = '';\n\n      if (headless) {\n        csv += Object.keys(uniqueStructure).map((_, i) => `-${i}-`).join('§') + '\\n';\n      }\n\n      csv += resultStructure.map((_, i) => {\n        return Object.keys(uniqueStructure).map(key => {\n          return (uniqueStructure[key][i] || '').replace(/§/g, ' ').replace(/\\n/g, ' ');\n        }).join('§');\n      }).join('\\n');\n\n      return [ csv, log ];\n    }\n  }\n  catch(e) {\n    log.push(e.toString());\n    return [ '', log, e.toString() ];\n  }\n}, text, hasHeader == 'yes');\n\nif (error) throw error;\n\nawait page.screenshot({ path: `screenshot.jpg`, fullPage: true });\n\nawait page.close();\nawait browser.close();\n\nconst dsvParser = d3.dsvFormat('§');\ndata = dsvParser.parse(table);\n\nconst contents = fs.readFileSync('screenshot.jpg', {encoding: 'base64'});\nscreenshot = 'data:image/jpg;base64,' + contents;\n",
    "904": "/**\n  output: [html]\n  params: [x, y, color, size]\n  deps: [\n    'chart-utils.js',\n    'https://cdn.jsdelivr.net/npm/d3@6',\n    'https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1',\n  ]\n**/\n\ndebugger\nconst chartdata = x && y\n ? data.map(v => ({\n     x: convert(v[x]),\n     y: convert(v[y]),\n     color: convert(v[color]),\n     size: convert(v[size]),\n   }))\n : [];\n\nconst chart = Plot.dot(\n  chartdata, {\n    x: x ? \"x\" : [],\n    y: y ? \"y\" : [],\n    r: size ? \"size\" : 5,\n    fill: color ? \"color\" : d3.schemeTableau10[0],\n  }\n);\n\nhtml.appendChild(Plot.plot({\n  marks: [chart],\n  x: { grid: true },\n  y: {\n    grid: true,\n    tickFormat: (d) => (d > 1000 ? d3.format('~s')(d) : d),\n  },\n  width: html.clientWidth,\n  height: html.clientHeight,\n  style: {\n    background: hal9.isDark() ? \"#222\" : '',\n    color: hal9.isDark() ? \"white\" : ''\n  },\n}));\n",
    "905": "/**\n  params:\n    - field\n    - name: expression\n      label: 'Expression'\n      value:\n        - control: 'textbox'\n          value: new Date(field)\n**/\n\nif (expression) {\n  var mapexpr = new Function('field', 'return ' + expression);\n  data = data.map(row => {\n    row[field] = mapexpr(row[field])\n    return row;\n  });\n}\n\n",
    "906": "/**\n  input: []\n  params:\n    - name: file\n      label: 'File'\n      value:\n        - control: 'fileload'\n          links:\n            - name: 'url'\n              label: 'Insert link'\n            - name: 'file'\n              label: 'Load file'\n          selected: 'url'\n          fileExt: '.csv'\n          value: 'https://raw.githubusercontent.com/javierluraschi/datasets/datasets/aapl/data.csv'\n    - name: separator\n      label: 'Separator'\n      value:\n        - control: 'textbox'\n          value: ','\n    - name: skip\n      label: 'Skip'\n      value:\n        - control: 'textbox'\n          value: ''\n  deps: [ 'https://cdnjs.cloudflare.com/ajax/libs/d3/6.2.0/d3.min.js' ]\n  cache: true\n**/\n\nfile = file ? file : '';\nvar type = /^hal9:|^data:/.test(file) ? 'file' : 'url';\n\nconst dsvParser = d3.dsvFormat(separator || ',');\n\nlet csv = '';\n\nif (type === 'url' && file != '') {\n  const res = await fetch(file);\n  csv = await res.text();\n} else {\n  file = atob(file.replace(/^.*;base64,/, ''));\n  csv = file;\n}\n\nif (csv) {\n  if (skip) {\n    var withsplit = csv.split('\\n');\n    withsplit.splice(0, skip);\n    csv = withsplit.join('\\n');\n  }\n  data = dsvParser.parse(csv);\n  data = data.filter(d => typeof(d) !== 'undefined')\n} else {\n  data = '';\n}\n",
    "907": "/**\n  params:\n    - field\n    - name: expression\n      label: 'Expression'\n      value:\n        - control: 'textbox'\n          value: field != null\n**/\n\nif (expression) {\n  var filterexp = new Function('field', 'return ' + expression);\n  data = data.filter(row => filterexp(row[field]));\n}\n",
    "908": "/**\n  params:\n    - name: x\n      label: Y\n    - name: y\n      label: Y\n    - name: type\n      label: Type\n      value:\n        - control: select\n          value: linear\n          values:\n            - name: linear\n              label: Linear    \n            - name: exponential\n              label: Exponential\n            - name: logarithmic\n              label: Logarithmic\n            - name: power\n              label: Power\n            - name: polynomial\n              label: Polynomial\n    - name: predictions\n      label: Predictions\n      value:\n        - control: range\n          value: 0\n          min: 0\n          max: 100\n  output:\n    - data\n    - html\n  deps:\n    - 'chart-utils.js'\n    - 'https://cdn.jsdelivr.net/npm/d3@6'\n    - 'https://cdn.jsdelivr.net/npm/@observablehq/plot@0.1'\n**/\n\ntf.setBackend('cpu');\n\nif (!x) {\n  var x = '_id';\n  data.map((e,i) => Object.assign(e, { '_id': i }))\n}\n\n// Train\n\nconst trainX = tf.tensor1d(data.map(e => convert(e[x])));\nconst trainY = tf.tensor1d(data.map(e => convert(e[y])));\n\nconst [maxX, minX] = [trainX.max(), trainX.min()];\nconst normX = trainX.sub(minX).div(maxX.sub(minX));\nconst [maxY, minY] = [trainY.max(), trainY.min()];\nconst normY = trainY.sub(minY).div(maxY.sub(minY));\n\nconst learningRate = 0.3;\nconst epochs = 100;\n\nvar regressions = {\n  linear: () => {\n    const m = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => m.mul(x).add(b);\n  },\n  exponential: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => b.mul(x).exp().mul(a);\n  },\n  logarithmic: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.log().mul(b).add(a);\n  },\n  power: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.pow(b).mul(a);\n  },\n  polynomial: () => {\n    const a = tf.variable(tf.scalar(Math.random()));\n    const b = tf.variable(tf.scalar(Math.random()));\n    const c = tf.variable(tf.scalar(Math.random()));\n    return (x) => x.sqrt().mul(a).add(b.mul(x)).add(c);\n  }\n}\n\nconst predict = regressions[type]();\n\nconst loss = (pred, actual) => pred.sub(actual).square().mean();\nconst optimizer = tf.train.adam(learningRate);\n\nfor (let idx = 0; idx < epochs; idx++) {\n  tf.tidy(() => {\n    optimizer.minimize(function() { \n      const predsYs = predict(normX); \n      stepLoss = loss(predsYs, normY);   \n      return stepLoss; \n    }); \n  });\n}\n\n// Predict\n\nvar current = convert(data[data.length-1][x]);\nvar increment = data[data.length-1][x] - data[data.length-2][x];\nvar predTotal = Math.round(1.0 * data.length * predictions / 100);\nfor (var idx = 0; idx < predTotal; idx++) {\n  current += increment;\n  var futureRow = Object.fromEntries(Object.keys(data[data.length - 1]).map(e => [e, null]));\n  futureRow[x] = current;\n  data.push(futureRow);\n}\n\nvar predsX = tf.tensor1d(data.map(e => convert(e[x])));\nvar predsNormX = predsX.sub(minX).div(maxX.sub(minX));\nvar normPreds = predict(predsNormX);\nvar preds = normPreds.mul(maxY.sub(minY)).add(minY).dataSync();\n\ndata = data.map((e, i) => {\n  e['prediction(' + y + ')'] = preds[i];\n  return e;\n});\n\n// Chart\n\nif (y && !Array.isArray(y)) y = [y];\nif (!y) { y = [] } else { y.push('prediction(' + y + ')') };\n\nconst chartdata = x && y.length\n ? data.map(v => {\n     const value = { x: convert(v[x]) };\n     y.map((yv, i) => {\n       value[`y${i}`] = convert(v[yv]);\n     });\n     return value;\n   })\n : [];\n\nhtml.appendChild(Plot.plot({\n  marks: [\n    Plot.line(chartdata, {\n      x: x ? \"x\" : [],\n      y: `y1`,\n      stroke: d3.schemeTableau10[1],\n      strokeWidth: 3,\n      strokeDasharray: \"2,3\"\n    }),\n    Plot.line(chartdata, {\n      x: x ? \"x\" : [],\n      y: `y0`,\n      stroke: d3.schemeTableau10[0],\n      strokeWidth: 3,\n    })\n  ],\n  x: { grid: true },\n  y: {\n    grid: true,\n    tickFormat: (d) => (d > 1000 ? d3.format('~s')(d) : d),\n  },\n  width: html.clientWidth,\n  height: html.clientHeight,\n  style: {\n    background: hal9.isDark() ? \"#222\" : '',\n    color: hal9.isDark() ? \"white\" : ''\n  },\n}));\n"
  },
  "version": "0.0.1",
  "state": {
    "steps": {
      "906": {
        "cache": {
          "hashes": {
            "inputs": "99914b932bd37a50b983c5e7c90ae93b",
            "script": "9bf0c6fbd203bbf44cf10133466714db",
            "params": "22b1796990bc536844a89076b39e0339"
          },
          "result": {
            "data": [
              {
                "Global Land and Ocean Temperature Anomalies": "Units: Degrees Celsius",
                " January-December": ""
              },
              {
                "Global Land and Ocean Temperature Anomalies": "Base Period: 1901-2000",
                " January-December": ""
              },
              {
                "Global Land and Ocean Temperature Anomalies": "Missing: -999",
                " January-December": ""
              },
              {
                "Global Land and Ocean Temperature Anomalies": "Year",
                " January-December": "Value"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1880",
                " January-December": "-0.12"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1881",
                " January-December": "-0.08"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1882",
                " January-December": "-0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1883",
                " January-December": "-0.18"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1884",
                " January-December": "-0.26"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1885",
                " January-December": "-0.25"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1886",
                " January-December": "-0.24"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1887",
                " January-December": "-0.29"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1888",
                " January-December": "-0.14"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1889",
                " January-December": "-0.09"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1890",
                " January-December": "-0.35"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1891",
                " January-December": "-0.26"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1892",
                " January-December": "-0.31"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1893",
                " January-December": "-0.33"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1894",
                " January-December": "-0.32"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1895",
                " January-December": "-0.25"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1896",
                " January-December": "-0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1897",
                " January-December": "-0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1898",
                " January-December": "-0.27"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1899",
                " January-December": "-0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1900",
                " January-December": "-0.08"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1901",
                " January-December": "-0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1902",
                " January-December": "-0.26"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1903",
                " January-December": "-0.37"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1904",
                " January-December": "-0.46"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1905",
                " January-December": "-0.28"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1906",
                " January-December": "-0.21"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1907",
                " January-December": "-0.38"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1908",
                " January-December": "-0.43"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1909",
                " January-December": "-0.44"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1910",
                " January-December": "-0.40"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1911",
                " January-December": "-0.44"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1912",
                " January-December": "-0.33"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1913",
                " January-December": "-0.32"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1914",
                " January-December": "-0.14"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1915",
                " January-December": "-0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1916",
                " January-December": "-0.32"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1917",
                " January-December": "-0.39"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1918",
                " January-December": "-0.30"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1919",
                " January-December": "-0.25"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1920",
                " January-December": "-0.23"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1921",
                " January-December": "-0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1922",
                " January-December": "-0.25"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1923",
                " January-December": "-0.25"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1924",
                " January-December": "-0.24"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1925",
                " January-December": "-0.18"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1926",
                " January-December": "-0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1927",
                " January-December": "-0.17"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1928",
                " January-December": "-0.18"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1929",
                " January-December": "-0.33"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1930",
                " January-December": "-0.11"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1931",
                " January-December": "-0.06"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1932",
                " January-December": "-0.13"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1933",
                " January-December": "-0.26"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1934",
                " January-December": "-0.11"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1935",
                " January-December": "-0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1936",
                " January-December": "-0.12"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1937",
                " January-December": "-0.01"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1938",
                " January-December": "-0.02"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1939",
                " January-December": "0.01"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1940",
                " January-December": "0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1941",
                " January-December": "0.27"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1942",
                " January-December": "0.11"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1943",
                " January-December": "0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1944",
                " January-December": "0.28"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1945",
                " January-December": "0.17"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1946",
                " January-December": "-0.01"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1947",
                " January-December": "-0.04"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1948",
                " January-December": "-0.06"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1949",
                " January-December": "-0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1950",
                " January-December": "-0.15"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1951",
                " January-December": "0.00"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1952",
                " January-December": "0.04"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1953",
                " January-December": "0.13"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1954",
                " January-December": "-0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1955",
                " January-December": "-0.13"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1956",
                " January-December": "-0.18"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1957",
                " January-December": "0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1958",
                " January-December": "0.12"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1959",
                " January-December": "0.08"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1960",
                " January-December": "0.05"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1961",
                " January-December": "0.10"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1962",
                " January-December": "0.11"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1963",
                " January-December": "0.12"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1964",
                " January-December": "-0.14"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1965",
                " January-December": "-0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1966",
                " January-December": "-0.01"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1967",
                " January-December": "0.00"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1968",
                " January-December": "-0.03"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1969",
                " January-December": "0.11"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1970",
                " January-December": "0.06"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1971",
                " January-December": "-0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1972",
                " January-December": "0.04"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1973",
                " January-December": "0.19"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1974",
                " January-December": "-0.06"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1975",
                " January-December": "0.01"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1976",
                " January-December": "-0.07"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1977",
                " January-December": "0.21"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1978",
                " January-December": "0.12"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1979",
                " January-December": "0.23"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1980",
                " January-December": "0.28"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1981",
                " January-December": "0.32"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1982",
                " January-December": "0.19"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1983",
                " January-December": "0.36"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1984",
                " January-December": "0.17"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1985",
                " January-December": "0.16"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1986",
                " January-December": "0.24"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1987",
                " January-December": "0.38"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1988",
                " January-December": "0.39"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1989",
                " January-December": "0.30"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1990",
                " January-December": "0.45"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1991",
                " January-December": "0.39"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1992",
                " January-December": "0.24"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1993",
                " January-December": "0.28"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1994",
                " January-December": "0.35"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1995",
                " January-December": "0.47"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1996",
                " January-December": "0.33"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1997",
                " January-December": "0.52"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1998",
                " January-December": "0.65"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "1999",
                " January-December": "0.44"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2000",
                " January-December": "0.43"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2001",
                " January-December": "0.57"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2002",
                " January-December": "0.62"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2003",
                " January-December": "0.64"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2004",
                " January-December": "0.58"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2005",
                " January-December": "0.67"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2006",
                " January-December": "0.64"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2007",
                " January-December": "0.62"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2008",
                " January-December": "0.54"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2009",
                " January-December": "0.65"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2010",
                " January-December": "0.73"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2011",
                " January-December": "0.58"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2012",
                " January-December": "0.64"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2013",
                " January-December": "0.68"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2014",
                " January-December": "0.74"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2015",
                " January-December": "0.93"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2016",
                " January-December": "0.99"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2017",
                " January-December": "0.91"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2018",
                " January-December": "0.82"
              },
              {
                "Global Land and Ocean Temperature Anomalies": "2019",
                " January-December": "0.95"
              }
            ]
          }
        }
      }
    }
  }
}
